{"version":3,"mappings":"wCAEA,MAAMA,EACL,gHAEKC,EACL,8hBCKqB,eAAAC,EACrBC,EACAC,EAC0B,CACtB,IACH,MAAMC,EAAW,MAAM,MAAMF,EAAOC,CAAI,EAExC,OAAIC,EAAS,GACLA,EAAS,QAEhB,QAAQ,MAAM,2BAA8B,MAAMA,EAAS,KAAO,GAC3D,YAEAC,EAAY,CACZ,qBAAM,wBAAwBA,CAAK,EAAE,EACtC,IACR,CACD,CAGA,eAAsBC,EACrBC,EACgB,CACZ,UAAO,mBAAsB,WAC5B,IAGG,MAAAC,EAAO,SAAS,cAAc,MAAM,EAC1CA,EAAK,KAAO,WACZA,EAAK,IAAM,aACXA,EAAK,KAAO,uBACH,cAAK,YAAYA,CAAI,EAE9B,KAAM,CAAE,QAASC,CAAmB,QAAAC,EAAA,IAAM,OAAO,mCAAiB,uBAClEH,EAAY,QAASI,GAAWF,EAAe,eAAeE,CAAM,CAAC,OACtD,CACf,QAAQ,MAAM,kCAAkC,CACjD,CAEF,CAEO,SAASC,EAAmBC,EAA0B,CACtDA,EAAA,iBAAiB,QAAUC,GAAU,CACtCD,EAAM,MAAQC,EAAM,SAAWD,GAClCA,EAAM,MAAM,CACb,CACA,CACF","names":["closeSvg","addSvg","ProperFetch","input","init","response","error","DynamicImportDialogPolyfill","dialogArray","link","dialogPolyfill","__vitePreload","dialog","ClickOutsideDialog","modal","event"],"sources":["../../src/assets/svgs.ts","../../src/shared.ts"],"sourcesContent":["export { closeSvg, addSvg }\n\nconst closeSvg =\n\t'M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z'\n\nconst addSvg =\n\t'M14.613,10c0,0.23-0.188,0.419-0.419,0.419H10.42v3.774c0,0.23-0.189,0.42-0.42,0.42s-0.419-0.189-0.419-0.42v-3.774H5.806c-0.23,0-0.419-0.189-0.419-0.419s0.189-0.419,0.419-0.419h3.775V5.806c0-0.23,0.189-0.419,0.419-0.419s0.42,0.189,0.42,0.419v3.775h3.774C14.425,9.581,14.613,9.77,14.613,10 M17.969,10c0,4.401-3.567,7.969-7.969,7.969c-4.402,0-7.969-3.567-7.969-7.969c0-4.402,3.567-7.969,7.969-7.969C14.401,2.031,17.969,5.598,17.969,10 M17.13,10c0-3.932-3.198-7.13-7.13-7.13S2.87,6.068,2.87,10c0,3.933,3.198,7.13,7.13,7.13S17.13,13.933,17.13,10'\n","import { StatsObject } from './types/Typings'\n\nexport type JSONReturnType =\n\t| string\n\t| number\n\t| boolean\n\t| { [x: string]: JSONReturnType }\n\t| JSONReturnType[]\n\t| StatsObject\n\t| null\n\nexport async function ProperFetch(\n\tinput: RequestInfo | URL,\n\tinit?: RequestInit | undefined\n): Promise<JSONReturnType> {\n\ttry {\n\t\tconst response = await fetch(input, init)\n\n\t\tif (response.ok) {\n\t\t\treturn response.json() as Promise<JSONReturnType>\n\t\t} else {\n\t\t\tconsole.error('Responded with an error:' + (await response.json()))\n\t\t\treturn null\n\t\t}\n\t} catch (error: any) {\n\t\tconsole.error(`Error in fetch call: ${error}`)\n\t\treturn null\n\t}\n}\n\n// Imports the dialog polyfill dynamically if its needed\nexport async function DynamicImportDialogPolyfill(\n\tdialogArray: HTMLDialogElement[]\n): Promise<void> {\n\tif (typeof HTMLDialogElement !== 'function') {\n\t\ttry {\n\t\t\t// adds the folllowing to the head of the document\n\t\t\t// <link rel=\"stylesheet\" type=\"text/css\" href=\"/dialog-polyfill.css\" />\n\t\t\tconst link = document.createElement('link')\n\t\t\tlink.type = 'text/css'\n\t\t\tlink.rel = 'stylesheet'\n\t\t\tlink.href = '/dialog-polyfill.css'\n\t\t\tdocument.head.appendChild(link)\n\n\t\t\tconst { default: dialogPolyfill } = await import('dialog-polyfill')\n\t\t\tdialogArray.forEach((dialog) => dialogPolyfill.registerDialog(dialog))\n\t\t} catch (error) {\n\t\t\tconsole.error('You need to update your browser.')\n\t\t}\n\t}\n}\n\nexport function ClickOutsideDialog(modal: HTMLDialogElement) {\n\tmodal.addEventListener('click', (event) => {\n\t\tif (modal.open && event.target === modal) {\n\t\t\tmodal.close()\n\t\t}\n\t})\n}\n"],"file":"assets/shared-YkqdmBJV.js"}