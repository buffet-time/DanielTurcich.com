{"version":3,"file":"Music-9cf52c59.js","sources":["../../src/types/Typings.ts","../../src/pages/subcomponents/MusicRelease.vue","../../src/pages/subcomponents/Search.vue","../../src/pages/Music.vue"],"sourcesContent":["export type PasswordToggle = Record<\n\tstring,\n\t{\n\t\texclude: boolean\n\t\tcharacters: string\n\t\tlabel: string\n\t}\n>\n\nexport type SortingAlgorithm =\n\t| ''\n\t| 'Bubble'\n\t| 'Insertion'\n\t| 'Cocktail Shaker'\n\t| 'Selection'\n\t| 'Merge'\n\t| 'Quick'\n\t| 'Heap'\n\t| 'Shell'\n\t| 'Gnome'\n\t| 'Bogo'\n\nexport type GeneratorOscillatorType =\n\t| 'sawtooth'\n\t| 'sine'\n\t| 'square'\n\t| 'triangle'\n\nexport type Note =\n\t| 'C'\n\t| 'D♭'\n\t| 'D'\n\t| 'E♭'\n\t| 'E'\n\t| 'F'\n\t| 'G♭'\n\t| 'G'\n\t| 'A♭'\n\t| 'A'\n\t| 'B♭'\n\t| 'B'\n\nexport type GeneratorType = 'Frequency' | 'Note'\n\nexport interface Generator {\n\tid: number\n\tgeneratorType: GeneratorType\n}\n\nexport interface SortingRect {\n\tx: number\n\ty: number\n\twidth: number\n\theight: number\n\tfrequency: number\n}\n\nexport interface StatsObject {\n\tnumberOfReleases: string | number\n\taverageYear: string | number\n\taverageScore: string | number\n\tnumberOfArtists: string | number\n\treleasesPerYear: number[]\n\tcurrentYear: number\n\tearliestYear: number\n}\n\nexport interface NavLink {\n\tsrc: string\n\talt: string\n\tbuttonText: string\n\tlink: string\n}\n\nexport type Tab = 'Stats' | 'Search'\n\nexport type SearchType = 'artist' | 'name' | 'score' | 'type' | 'year' | 'genre'\n\nexport enum Release {\n\t'artist',\n\t'name',\n\t'score',\n\t'type',\n\t'year',\n\t'genre',\n\t'comments'\n}\n\nexport enum ReleasesIn {\n\t'1950s',\n\t'1960s',\n\t'1970s',\n\t'1980s',\n\t'1990s',\n\t'2000s',\n\t'2010s',\n\t'2020s'\n}\n\n// Wrapped in query for router.replace()\nexport interface MusicPageQueries {\n\tquery: {\n\t\ttab: Tab\n\t\ttype?: SearchType\n\t\tterm?: string\n\t}\n}\n\nexport interface ArticleLink {\n\turl: string\n\ttext: string\n}\n\nexport interface MusicSearchProps {\n\tcurrentYear: number\n\tearliestYear: number\n\treleasesArray: string[][]\n\tinitializing: boolean\n}\n\nexport interface SortingVisualizationProps {\n\tsleepTime: number | string\n\tstopExecution: boolean\n\trandomizeArray: boolean\n\toscillator: OscillatorNode\n\tnumberOfRectangles: number | string\n\tsortingMethod: SortingAlgorithm\n}\n","<script setup lang=\"ts\">\nimport { Release } from '#types'\nimport { closeSvg } from '#assets/svgs'\nimport { onMounted, ref } from 'vue'\nimport { ClickOutsideDialog, DynamicImportDialogPolyfill } from '../../shared'\n\n// eslint-disable-next-line vue/no-setup-props-destructure, vue/no-dupe-keys\nconst { release } = defineProps<{\n\trelease: string[]\n}>()\n\nconst releaseModal = ref<HTMLDialogElement>()\n\nonMounted(async () => {\n\tif (!releaseModal.value) {\n\t\tconsole.error('Release Modal does not exist: ', releaseModal.value)\n\t\treturn\n\t}\n\tawait DynamicImportDialogPolyfill([releaseModal.value])\n\tClickOutsideDialog(releaseModal.value)\n})\n\nasync function copyReviews() {\n\tawait navigator.clipboard.writeText(\n\t\t` ${release[Release.artist]} - ${release[Release.name]}: ${\n\t\t\trelease[Release.score]\n\t\t}`\n\t)\n}\n</script>\n\n<template>\n\t<div\n\t\tclass=\"tw-card bg-neutral-500 text-center m-2 cursor-pointer w-80 h-24 rounded\"\n\t\t@click=\"releaseModal?.showModal()\"\n\t>\n\t\t<div\n\t\t\tclass=\"tw-card m-0 p-2 h-full bg-transparent flex flex-col items-center justify-center\"\n\t\t>\n\t\t\t<div class=\"overflow-hidden text-ellipsis max-w-full whitespace-nowrap\">\n\t\t\t\t{{ release[Release.artist] }}\n\t\t\t</div>\n\t\t\t<div class=\"flex max-w-full gap-1\">\n\t\t\t\t<div class=\"flex-auto overflow-hidden whitespace-nowrap text-ellipsis\">\n\t\t\t\t\t{{ release[Release.name] }}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"flex-none\">({{ release[Release.score] }}/10)</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<!-- TODO: pull out Modal here and everywhere into a generic component -->\n\t<dialog ref=\"releaseModal\" class=\"bg-transparent p-0 w-[88vw] max-w-xl\">\n\t\t<div id=\"releaseModal\" class=\"text-neutral-300 bg-[#383838]\">\n\t\t\t<div\n\t\t\t\tclass=\"flex items-center justify-between p-4 border-b border-solid border-[#dee2e6]\"\n\t\t\t>\n\t\t\t\t<h5>\n\t\t\t\t\t{{ release[Release.artist] }} - {{ release[Release.name] }}\n\t\t\t\t\t<span class=\"whitespace-nowrap\">\n\t\t\t\t\t\t( {{ release[Release.score] }}/10 )\n\t\t\t\t\t</span>\n\t\t\t\t</h5>\n\t\t\t\t<svg\n\t\t\t\t\tclass=\"w-6 min-w-[24px] cursor-pointer\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t@click=\"releaseModal?.close()\"\n\t\t\t\t>\n\t\t\t\t\t<path fill=\"currentColor\" :d=\"closeSvg\" />\n\t\t\t\t</svg>\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tclass=\"flex flex-col items-center justify-center p-4 border-b border-solid border-[#dee2e6]\"\n\t\t\t>\n\t\t\t\t<div class=\"mb-4\">Genres: {{ release[Release.genre] }}</div>\n\n\t\t\t\t<template v-if=\"release.length === 7\">\n\t\t\t\t\t{{ release[Release.comments] }}\n\t\t\t\t</template>\n\t\t\t\t<template v-else>No comments for this release.</template>\n\t\t\t</div>\n\n\t\t\t<div class=\"flex justify-between p-4 items-center\">\n\t\t\t\t({{ release[Release.year] }} {{ release[Release.type] }})\n\n\t\t\t\t<div>\n\t\t\t\t\t<button class=\"tw-button mr-2\" @click=\"copyReviews\">Copy</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclass=\"tw-button\"\n\t\t\t\t\t\t@click=\"releaseModal?.close()\"\n\t\t\t\t\t>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</dialog>\n</template>\n","<script setup lang=\"ts\">\nimport { useRouter, useRoute } from 'vue-router'\nimport { onMounted, ref, watch } from 'vue'\nimport { type MusicSearchProps, Release, type SearchType } from '#types'\nimport MusicRelease from './MusicRelease.vue'\n\n// eslint-disable-next-line vue/no-setup-props-destructure, vue/no-dupe-keys\nconst { search } = defineProps<{\n\tsearch: MusicSearchProps\n}>()\nconst Router = useRouter()\nconst Route = useRoute()\n\nlet mounting = true\n\n// refs\nconst releasesToShow = ref([['']])\nconst searchType = ref(Release.artist)\nconst showReleasesDiv = ref(false)\nconst showNoResults = ref(false)\nconst searchInput = ref('')\n\nwatch(searchType, async () => {\n\tif (mounting && Route.query.term) {\n\t\treturn\n\t}\n\n\tswitch (searchType.value) {\n\t\tcase Release.score:\n\t\t\tsearchInput.value = '7'\n\t\t\tbreak\n\t\tcase Release.type:\n\t\t\tsearchInput.value = 'Album'\n\t\t\tbreak\n\t\tcase Release.year:\n\t\t\tsearchInput.value = String(search.currentYear)\n\t\t\tbreak\n\t\tdefault:\n\t\t\tsearchInput.value = ''\n\t}\n\n\tawait Router.replace({\n\t\tquery: {\n\t\t\ttab: 'Search',\n\t\t\tterm: searchInput.value,\n\t\t\ttype: Release[searchType.value]\n\t\t}\n\t})\n})\n\nonMounted(() => {\n\tif (Route.query.term) {\n\t\tsearchInput.value = Route.query.term as string\n\t\tsearchType.value = Release[Route.query.type as SearchType]\n\t\tconst interval = setInterval(\n\t\t\t() => async () => {\n\t\t\t\tif (!search.initializing) {\n\t\t\t\t\tawait searchButtonPressed()\n\t\t\t\t\tclearInterval(interval)\n\t\t\t\t\tmounting = false\n\t\t\t\t}\n\t\t\t},\n\t\t\t250\n\t\t)\n\t} else if (Route.query.type) {\n\t\tsearchType.value = Release[Route.query.type as SearchType]\n\t\tmounting = false\n\t} else {\n\t\tmounting = false\n\t}\n})\n\nasync function searchButtonPressed() {\n\tshowReleasesDiv.value = false\n\tshowNoResults.value = false\n\tsearchInput.value = searchInput.value.trim()\n\tlet equals = false\n\n\tswitch (searchType.value) {\n\t\tcase Release.score:\n\t\t\tequals = true\n\t\t\tbreak\n\t\tcase Release.type:\n\t\t\tequals = true\n\t\t\tbreak\n\t\tcase Release.year:\n\t\t\tequals = true\n\t\t\tbreak\n\t}\n\treleasesToShow.value = getRelasesFromSearch(searchType.value, equals)\n\n\tif (releasesToShow.value.length > 0) {\n\t\tshowReleasesDiv.value = true\n\t} else {\n\t\tshowNoResults.value = true\n\t}\n\n\tawait Router.replace({\n\t\tquery: {\n\t\t\ttab: 'Search',\n\t\t\tterm: searchInput.value,\n\t\t\ttype: Release[searchType.value]\n\t\t}\n\t})\n}\n\nfunction getRelasesFromSearch(index: Release, equals: boolean) {\n\treturn search.releasesArray.filter((release) =>\n\t\tequals\n\t\t\t? release[index].toLowerCase() === searchInput.value.toLowerCase()\n\t\t\t: release[index].toLowerCase().includes(searchInput.value.toLowerCase())\n\t)\n}\n</script>\n\n<template>\n\t<div id=\"searchContent\" class=\"w-full\">\n\t\t<h3 class=\"mb-2\">Search by:</h3>\n\t\t<select v-model=\"searchType\" class=\"text-black pl-4 py-2 rounded w-72\">\n\t\t\t<option selected :value=\"Release.artist\">Artist</option>\n\t\t\t<option :value=\"Release.name\">Release Name</option>\n\t\t\t<option :value=\"Release.score\">Score</option>\n\t\t\t<!-- <option :value=\"Release.type\">Type</option> -->\n\t\t\t<option :value=\"Release.year\">Year</option>\n\t\t\t<option :value=\"Release.genre\">Genre</option>\n\t\t</select>\n\n\t\t<div class=\"m-4 flex justify-center\">\n\t\t\t<!-- Search against score -->\n\t\t\t<div v-if=\"searchType === Release.score\" class=\"flex flex-col\">\n\t\t\t\t<div class=\"mb-1\">{{ searchInput }}</div>\n\t\t\t\t<input\n\t\t\t\t\tv-model=\"searchInput\"\n\t\t\t\t\tplaceholder=\"10\"\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tclass=\"w-64 bg-transparent h-2\"\n\t\t\t\t\tmin=\"0\"\n\t\t\t\t\tmax=\"10\"\n\t\t\t\t\tstep=\"0.5\"\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<!-- TODO:  -->\n\t\t\t<!-- Sorta irrelevant search type? -->\n\t\t\t<!-- Search against release type -->\n\n\t\t\t<!-- // prettier-ignore\n\t\t\tconst releaseTypes = [\n\t\t\t\t'Album', 'EP', 'Live Album',\n\t\t\t\t'Soundtrack', 'Remix Album',\n\t\t\t\t'Compilation', 'Demo Album'\n\t\t\t] -->\n\t\t\t<!-- <div v-else-if=\"searchType === Release.type\">\n\t\t\t\t<select v-model=\"searchInput\" class=\"text-black pl-4 py-2 rounded w-64\">\n\t\t\t\t\t<option\n\t\t\t\t\t\tv-for=\"(type, index) in releaseTypes\"\n\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\t:value=\"type\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ type }}\n\t\t\t\t\t</option>\n\t\t\t\t</select>\n\t\t\t</div> -->\n\n\t\t\t<!-- Search against year -->\n\t\t\t<div v-else-if=\"searchType === Release.year\" class=\"flex flex-col\">\n\t\t\t\t<label for=\"customRange1\" class=\"form-label\">{{ searchInput }}</label>\n\t\t\t\t<input\n\t\t\t\t\tv-model=\"searchInput\"\n\t\t\t\t\t:placeholder=\"String(search.currentYear)\"\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tclass=\"w-64 bg-transparent h-2\"\n\t\t\t\t\t:min=\"search.earliestYear\"\n\t\t\t\t\t:max=\"search.currentYear\"\n\t\t\t\t\tstep=\"1\"\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<!-- All others -->\n\t\t\t<input\n\t\t\t\tv-else\n\t\t\t\tv-model=\"searchInput\"\n\t\t\t\tclass=\"w-64 py-2 px-3 text-black rounded\"\n\t\t\t\tplaceholder=\"Search input\"\n\t\t\t\t@keyup.enter=\"searchButtonPressed\"\n\t\t\t/>\n\n\t\t\t<button\n\t\t\t\t:disabled=\"search.initializing || searchInput.length < 1\"\n\t\t\t\tclass=\"ml-4 tw-button\"\n\t\t\t\t@click=\"searchButtonPressed\"\n\t\t\t>\n\t\t\t\tSearch\n\t\t\t</button>\n\t\t</div>\n\n\t\t<div\n\t\t\tv-if=\"showReleasesDiv\"\n\t\t\tref=\"releases\"\n\t\t\tclass=\"m-2 mt-4 mb-2 flex flex-wrap justify-center\"\n\t\t>\n\t\t\t<MusicRelease\n\t\t\t\tv-for=\"(release, index) in releasesToShow\"\n\t\t\t\t:key=\"index\"\n\t\t\t\t:index=\"index\"\n\t\t\t\t:release=\"release\"\n\t\t\t/>\n\t\t</div>\n\t\t<div v-if=\"showNoResults\">No results from your search.</div>\n\t</div>\n</template>\n","<script setup lang=\"ts\">\nimport { onBeforeMount, ref } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport Search from './subcomponents/Search.vue'\nimport Stats from './subcomponents/Stats.vue'\nimport type { MusicPageQueries, StatsObject, Tab } from '#types'\nimport { ProperFetch } from '../shared'\n\n// const loadingString = 'loading...'\nconst route = useRoute()\nconst router = useRouter()\n\n// public variables\nconst initializing = ref(true)\nconst releasesArray = ref([['']])\nconst currentActiveTab = ref<Tab>('Stats')\nconst statsObject = ref<StatsObject>()\n\n// TODO: move Stats to be calculated and cached on the API\nonBeforeMount(async () => {\n\tconst queryTab = route.query.tab as Tab\n\tif (queryTab === 'Search') {\n\t\tsetTab(queryTab)\n\t} else {\n\t\tawait switchTabTo('Stats')\n\t}\n\n\tlet retries = 0\n\tasync function getData() {\n\t\tif (retries > 2) {\n\t\t\tconsole.error(`Can't get the data :(`)\n\t\t}\n\n\t\tconst values = await Promise.all([getReleases(), getStats()])\n\n\t\tconst releases = values[0]\n\t\tconst stats = values[1]\n\n\t\tif (releases && stats) {\n\t\t\treleasesArray.value = releases\n\t\t\tstatsObject.value = stats\n\t\t\tinitializing.value = false\n\t\t} else {\n\t\t\tsetTimeout(\n\t\t\t\t() => async () => {\n\t\t\t\t\tawait getData()\n\t\t\t\t\tretries++\n\t\t\t\t},\n\t\t\t\t5000\n\t\t\t)\n\t\t}\n\t}\n\n\tawait getData()\n})\n\nasync function getReleases(): Promise<string[][] | null> {\n\treturn (await ProperFetch(\n\t\t`https://api.danielturcich.com/Releases`\n\t)) as string[][]\n}\n\nasync function getStats(): Promise<StatsObject | null> {\n\treturn (await ProperFetch(\n\t\t`https://api.danielturcich.com/Stats`\n\t)) as StatsObject\n}\n\nfunction setTab(tabName: Tab) {\n\tcurrentActiveTab.value = tabName\n}\n\nasync function switchTabTo(tabName: Tab) {\n\tconst queryParams: MusicPageQueries = { query: { tab: tabName } }\n\n\tif (tabName === 'Search') {\n\t\tqueryParams.query.type = 'artist'\n\t}\n\tawait router.replace(queryParams)\n\tsetTab(tabName)\n}\n</script>\n\n<template>\n\t<div class=\"tw-flex-col-center gap-4\">\n\t\t<h1 class=\"mt-4 text-2xl font-semibold\">My Music Page</h1>\n\n\t\t<!-- TODO: have the current tab be persistently highlighted -->\n\t\t<div>\n\t\t\t<button\n\t\t\t\tclass=\"tw-tab-button\"\n\t\t\t\t:class=\"{\n\t\t\t\t\t'bg-white': currentActiveTab === 'Stats',\n\t\t\t\t\t'text-neutral-600': currentActiveTab === 'Stats'\n\t\t\t\t}\"\n\t\t\t\ttype=\"button\"\n\t\t\t\t@click=\"switchTabTo('Stats')\"\n\t\t\t>\n\t\t\t\tStats\n\t\t\t</button>\n\n\t\t\t<button\n\t\t\t\tclass=\"tw-tab-button\"\n\t\t\t\t:class=\"{\n\t\t\t\t\t'bg-white': currentActiveTab === 'Search',\n\t\t\t\t\t'text-neutral-600': currentActiveTab === 'Search'\n\t\t\t\t}\"\n\t\t\t\ttype=\"button\"\n\t\t\t\t@click=\"switchTabTo('Search')\"\n\t\t\t>\n\t\t\t\tSearch\n\t\t\t</button>\n\t\t</div>\n\n\t\t<template v-if=\"!initializing\">\n\t\t\t<Stats v-if=\"currentActiveTab === 'Stats'\" :stats=\"statsObject!\" />\n\t\t\t<Search\n\t\t\t\tv-else-if=\"currentActiveTab === 'Search'\"\n\t\t\t\t:search=\"{\n\t\t\t\t\tcurrentYear: statsObject!.currentYear,\n\t\t\t\t\tearliestYear: statsObject!.earliestYear,\n\t\t\t\t\treleasesArray: releasesArray,\n\t\t\t\t\tinitializing: initializing\n\t\t\t\t}\"\n\t\t\t/>\n\t\t</template>\n\t</div>\n</template>\n"],"names":["Release","Release2","releaseModal","ref","onMounted","DynamicImportDialogPolyfill","ClickOutsideDialog","copyReviews","__props","Router","useRouter","Route","useRoute","mounting","releasesToShow","searchType","showReleasesDiv","showNoResults","searchInput","watch","interval","searchButtonPressed","equals","getRelasesFromSearch","index","release","route","router","initializing","releasesArray","currentActiveTab","statsObject","onBeforeMount","queryTab","setTab","switchTabTo","retries","getData","values","getReleases","getStats","releases","stats","ProperFetch","tabName","queryParams"],"mappings":"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"}